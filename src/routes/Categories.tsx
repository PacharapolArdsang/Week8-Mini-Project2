import { useEffect } from "react";
import { useDispatch, useSelector } from "react-redux";
import { useParams, useNavigate } from "react-router-dom";
import { fetchTopHeadlines, setCategory, setOffset } from "../store/newsSlice";
import type { RootState, AppDispatch } from "../store/store";
import ArticleGrid from "../components/ArticleGrid";
import Pagination from "../components/Pagination";

// ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏Ç‡πà‡∏≤‡∏ß‡∏ó‡∏µ‡πà NewsAPI ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö
const CATEGORIES = [
  { id: "general", name: "‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ", icon: "üì∞", color: "bg-blue-500" },
  { id: "business", name: "‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à", icon: "üíº", color: "bg-green-500" },
  { id: "technology", name: "‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ", icon: "üíª", color: "bg-purple-500" },
  { id: "entertainment", name: "‡∏ö‡∏±‡∏ô‡πÄ‡∏ó‡∏¥‡∏á", icon: "üé¨", color: "bg-pink-500" },
  { id: "sports", name: "‡∏Å‡∏µ‡∏¨‡∏≤", icon: "‚öΩ", color: "bg-orange-500" },
  { id: "science", name: "‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå", icon: "üî¨", color: "bg-teal-500" },
  { id: "health", name: "‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û", icon: "üè•", color: "bg-red-500" },
] as const;

export default function Categories() {
  const dispatch = useDispatch<AppDispatch>();
  const navigate = useNavigate();
  const { categoryId } = useParams<{ categoryId?: string }>();
  
  const { items, status, error, total, limit, offset, country } = useSelector(
    (state: RootState) => state.news
  );

  // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ categoryId ‡πÉ‡∏ô URL ‡πÉ‡∏´‡πâ fetch ‡∏Ç‡πà‡∏≤‡∏ß‡∏ï‡∏≤‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏ô‡∏±‡πâ‡∏ô
  useEffect(() => {
    if (categoryId) {
      dispatch(setCategory(categoryId));
      dispatch(setOffset(0));
    }
  }, [dispatch, categoryId]);

  // Fetch ‡∏Ç‡πà‡∏≤‡∏ß‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á
  useEffect(() => {
    if (categoryId) {
      dispatch(fetchTopHeadlines({ offset, limit, country, category: categoryId, query: "" }));
    }
  }, [dispatch, offset, limit, country, categoryId]);

  // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ categoryId ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
  if (!categoryId) {
    return (
      <div className="container mx-auto p-4">
        <div className="text-center mb-8">
          <h1 className="text-4xl font-bold mb-2">üìë ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏Ç‡πà‡∏≤‡∏ß</h1>
          <p className="text-base-content/70">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏™‡∏ô‡πÉ‡∏à‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πà‡∏≤‡∏ß‡∏™‡∏≤‡∏£</p>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
          {CATEGORIES.map((category) => (
            <button
              key={category.id}
              onClick={() => navigate(`/categories/${category.id}`)}
              className="card bg-base-100 shadow-lg hover:shadow-2xl transition-all duration-300 hover:scale-105 cursor-pointer"
            >
              <div className="card-body items-center text-center">
                <div className={`text-6xl mb-4 p-6 rounded-full ${category.color} bg-opacity-10`}>
                  {category.icon}
                </div>
                <h2 className="card-title text-2xl">{category.name}</h2>
                <p className="text-base-content/60 capitalize">{category.id}</p>
              </div>
            </button>
          ))}
        </div>
      </div>
    );
  }

  // ‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
  const currentCategory = CATEGORIES.find((cat) => cat.id === categoryId);

  return (
    <div className="container mx-auto p-4">
      {/* Header ‡∏Ç‡∏≠‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà */}
      <div className="flex items-center gap-4 mb-6">
        <button
          onClick={() => navigate("/categories")}
          className="btn btn-circle btn-ghost"
          title="‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà"
        >
          ‚Üê
        </button>
        <div className="flex-1">
          <div className="flex items-center gap-3">
            {currentCategory && (
              <span className="text-4xl">{currentCategory.icon}</span>
            )}
            <div>
              <h1 className="text-3xl font-bold">
                {currentCategory?.name || categoryId}
              </h1>
              <p className="text-base-content/70">
                ‡∏Ç‡πà‡∏≤‡∏ß‡∏™‡∏≤‡∏£‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î {currentCategory?.name}
              </p>
            </div>
          </div>
        </div>
        <button
          className="btn btn-primary"
          onClick={() => dispatch(fetchTopHeadlines({ offset: 0, limit, country, category: categoryId, query: "" }))}
          disabled={status === "loading"}
        >
          ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä
        </button>
      </div>

      {/* ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î */}
      {status === "loading" && (
        <div className="text-center py-6">
          <span className="loading loading-lg loading-spinner" />
          <p className="mt-2 text-base-content/70">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πà‡∏≤‡∏ß...</p>
        </div>
      )}

      {/* ‡πÅ‡∏™‡∏î‡∏á Error */}
      {status === "failed" && (
        <div className="alert alert-error mb-4">
          <span>{error || "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πà‡∏≤‡∏ß"}</span>
        </div>
      )}

      {/* ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πà‡∏≤‡∏ß */}
      {status === "succeeded" && items.length === 0 && (
        <div className="text-center py-12">
          <div className="text-6xl mb-4">üì≠</div>
          <p className="text-xl text-base-content/70">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πà‡∏≤‡∏ß‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏ô‡∏µ‡πâ</p>
        </div>
      )}

      <ArticleGrid items={items} />

      {/* Pagination */}
      {status !== "loading" && items.length > 0 && (
        <Pagination
          total={total}
          limit={limit}
          offset={offset}
          onChange={(nextOffset) => dispatch(setOffset(nextOffset))}
        />
      )}

      {/* ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à */}
      <div className="mt-12 pt-8 border-t border-base-300">
        <h2 className="text-2xl font-bold mb-4">‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏≠‡∏∑‡πà‡∏ô‡πÜ</h2>
        <div className="flex flex-wrap gap-3">
          {CATEGORIES.filter((cat) => cat.id !== categoryId).map((category) => (
            <button
              key={category.id}
              onClick={() => navigate(`/categories/${category.id}`)}
              className="btn btn-outline gap-2"
            >
              <span>{category.icon}</span>
              <span>{category.name}</span>
            </button>
          ))}
        </div>
      </div>
    </div>
  );
}
